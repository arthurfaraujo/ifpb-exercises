---
import fs from "node:fs/promises";
import ExerciseLayout from "../../layouts/ExerciseLayout.astro";

export async function getStaticPaths() {
  const allExercises = (await Astro.glob("./*/README.*")).filter((exercise) => {
    return !exercise.url.split("/")[3].startsWith("_");
  });

  await allExercises.reduce(async (acc, exercise) => {
    const slug = exercise.url.split("/")[3];

    const codes = await fs.readdir(`./src/pages/exercises/${slug}/_codes`);

    exercise.frontmatter.codes = codes;

    return {
      ...await acc,
      [slug]: codes,
    };
  }, {});

  return allExercises.map((exercise) => {
    const slug = exercise.url.split("/")[3];

    return {
      params: {
        exercise: slug,
      },
      props: {
        exercise,
        data: exercise.frontmatter,
      },
    };
  });
}

const { exercise } = Astro.params;
const { exercise: { Content }, data: { codes, title, preview } } = Astro.props;
---

<ExerciseLayout pageTitle={exercise}>
  <article class="mx-auto prose md:prose-lg lg:prose-xl">
    <h1 class="text-center">{title}</h1>
    <Content/>
    <h2>Códigos</h2>
    <ul>
      {codes.map((code) => {
        const github = `https://github.com/ifpb/exercises/tree/main/src/pages/exercises/${exercise}/_codes/${code}`;

        return (
          <li>
            {code}
            (código:
              <a href={`${github}/code/`}>github</a>,
              <a href={`https://download-directory.github.io/?url=${github}/code/`}>zip</a>
            ; resposta:
              <a href={`${github}/response/`}>github</a>,
              <a href={`https://download-directory.github.io/?url=${github}/response/`}>zip</a>
              { preview && (
                <>
                  , <a href={`./_codes/${code}/response/`}>preview</a>
                </>
              )

              }
            )
          </li>
        );
      })}
    </ul>
  </article>
</ExerciseLayout>
